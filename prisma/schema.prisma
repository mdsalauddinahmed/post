// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post{
  id Int @id @default(autoincrement())
  title String
  content String
  authorId Int @default(1)
  author User @relation(fields: [authorId], references: [id])
  published Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categories PostCategory[]
  @@map("posts")
}

model User{
  id Int @id @default(autoincrement())
  username String @unique
  email String
  age Int @default(0)
  role  UserRole
  posts Post[]
  profile profile?
  @@map("users")
}
model profile{
  id  Int @id @default(autoincrement())
  bio String?
  userId Int @unique
  user User  @relation(fields: [userId], references: [id])
  @@map("profiles")
}

model Category{
  id Int @id @default(autoincrement())
  name String
  posts PostCategory[]
  @@map("categories")
}

model PostCategory{
  postId Int
  categoryId Int
  post   Post @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  @@id([postId, categoryId])
  @@map("post_categories")
  
  }

enum UserRole{
  User
  admin
}